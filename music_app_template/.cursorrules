- 모든 코드는 Svelte 4를 준수하십시오.
- 서버 측 렌더링을 고려하고 window가 undefined가 될 것이라고 가정 한 코드를 작성하십시오.
- script 태그내에서 store로부터 값을 읽어들이는 경우는 svelte/store로부터 임포트한 get를 사용해 주세요. 템플릿내에서는 $를 사용해 주세요.
- 라우팅에서 URL에 포함된 매개변수를 검색하려면 import {page} from '$app/stores'; 를 가져온 page를 $page.params.[{slug}]를 사용하십시오.
- 컴포넌트에 직접 CSS를 기술하지 말고 반드시 Tailwind를 사용하십시오.
- 아티스트의 기본 이미지는 /img/artist_default.webp를 사용하십시오.
- 노래의 기본 이미지는 /img/song_default.webp를 사용하십시오.
- API는 $lib/api에서 가져오지 않고 fetch를 사용하여 호출하십시오.
- API에서 try catch를 사용하지 마십시오.
- 가능한 한 TypeScript 유형을 사용하십시오.
- Prisma 형은 @prisma/client에서 가져오십시오.
- 테스트 코드에서는 File.prototype.arrayBuffer가 존재하지 않으며 실행이 오류가 발생하기 때문에 다음과 같이 File.prototype.arrayBuffer를 덮어 쓰고 사용하십시오.
```
 testFile.arrayBuffer = async function() {
      return testImageBuffer.buffer;
    };
```